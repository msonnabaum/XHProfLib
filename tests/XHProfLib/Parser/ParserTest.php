<?php

use XHProfLib\Parser\Parser;
use XHProfLib\Run;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-01-20 at 20:22:27.
 */
class ParserTest extends \XHProfLibTestCase {
    /**
     * @var Parser
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
      $run = new Run(1234, 'namespacetest', $this->xhprofData());
      $this->object = new Parser($run);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
    }

    /**
     * @covers XHProfLib\Parser\Parser::getTotals
     * @todo   Implement testGetTotals().
     */
    public function testGetTotals() {
      $totals = $this->object->getTotals();
      $expected = array(
        'ct' => 6,
        'wt' => 1546311,
        'cpu' => 642577,
        'mu' => 52600504,
        'pmu' => 57486368,
      );
      $this->assertEquals($expected, $totals);
    }

    /**
     * @covers XHProfLib\Parser\Parser::getCallCount
     * @todo   Implement testGetCallCount().
     */
    public function testGetCallCount() {
      $call_count = $this->object->getCallCount();
      $this->assertEquals(6, $call_count);
    }

    /**
     * @covers XHProfLib\Parser\Parser::getMetrics
     * @todo   Implement testGetMetrics().
     */
    public function testGetMetrics() {
      $f1_metrics = $this->object->getMetrics('function_one');
      $expected = array (
        'ct' => 2,
        'wt' => 6,
        'cpu' => 9,
        'mu' => 1480,
        'pmu' => 0,
        'ct%' => 33.33,
        'wt%' => 0,
        'cpu%' => 0,
        'mu%' => 0,
        'pmu%' => 0,
      );
      $this->assertEquals($expected, $f1_metrics);

      $f3_metrics = $this->object->getMetrics('function_three');
      $expected = array (
        'ct' => 1,
        'wt' => 137,
        'cpu' => 221,
        'mu' => 952,
        'pmu' => 0,
        'ct%' => 16.67,
        'wt%' => 0.01,
        'cpu%' => 0.03,
        'mu%' => 0,
        'pmu%' => 0,
      );
      $this->assertEquals($expected, $f3_metrics);
    }
}
